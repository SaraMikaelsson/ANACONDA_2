% Description: Creates a dialog to gather input needed for the new filter.
%   - inputs:
%           Tree node -> filter 'path'          (base_path)
%   - outputs:
%           Modified loaded file metadata.      (mdata_n)
% Date of creation: 2017-08-18.
% Author: Benjamin Bolling.
% Modification date:
% Modifier:
%function [ ] = Edit_Filter_Choice()
function [ base_value ] = Edit_Filter_Choice(fieldstoedit, base_value)
md_GUI = evalin('base', 'md_GUI');
%function choice = choosedialog
screensize = md_GUI.UI.screensize;
numberoffieldstoedit = sum(fieldstoedit);


d = dialog('Position',[screensize(3)/4 screensize(4)/2 screensize(3)/3 screensize(4)/5],'Name','Select One');
txt_type = uicontrol('Parent',d,...
       'Style','text',...
       'units', 'normalized',...
       'fontsize', 12,...
       'HorizontalAlignment', 'right',...
       'Position',[0.02 0.8 0.28 0.18],...
       'String','Filter values type: ');
txt_value = uicontrol('Parent',d,...
       'Style','text',...
       'units', 'normalized',...
       'fontsize', 12,...
       'HorizontalAlignment', 'right',...
       'Position',[0.02 0.6 0.28 0.18],...
       'String','Value: ');

txt_translate = uicontrol('Parent',d,...
       'Style','text',...
       'units', 'normalized',...
       'fontsize', 12,...
       'HorizontalAlignment', 'right',...
       'Position',[0.02 0.4 0.28 0.18],...
       'String','Translate condition: ');
txt_invert = uicontrol('Parent',d,...
       'Style','text',...
       'units', 'normalized',...
       'fontsize', 12,...
       'HorizontalAlignment', 'right',...
       'Position',[0.02 0.2 0.28 0.18],...
       'String','Invert filter: ');

type_options = {'continuous'; 'discrete'};
for lk = 1:length(type_options)
    if strcmp(type_options(lk), base_value.type)
        type_value = lk;
    end
end
popup_type = uicontrol('Parent',d,...
       'Style','popup',...
       'units', 'normalized',...
       'fontsize', 12,...
       'Position',[0.35 0.8 0.55 0.18],...
       'String',type_options,...
       'Value', type_value,...
       'Callback',@type_callback);
value_onerowcheck = size(base_value.value);
if value_onerowcheck(1) == 1 %horizontal
elseif value_onerowcheck(2) == 1 %vertical
    base_value.value = base_value.value';
else %neither -> problem
    disp('error with value; it is a (n>1) x (m>1) matrix.')
end
edit_value = uicontrol('Parent',d,...
       'Style','edit',...
       'units', 'normalized',...
       'fontsize', 12,...
       'Position',[0.35 0.65 0.55 0.14],...
       'String',{num2str(base_value.value)},...
       'Callback',@value_callback);
translate_options = {'AND';'OR';'XOR';'HIT1';'HIT2'};
translave_value = 1;
if fieldstoedit(4) == 1 % translate
    for ll = 1:length(translate_options)
        if strcmp(translate_options(ll), base_value.translate_condition)
            translave_value = ll;
        end
    end
    translate_enable = 'on';
else
    translate_enable = 'off';
end
popup_translate = uicontrol('Parent',d,...
       'Style','popup',...
       'units', 'normalized',...
       'fontsize', 12,...
       'Position',[0.35 0.4 0.55 0.18],...
       'String',translate_options,...
       'Value',translave_value,...
       'Enable', translate_enable,...
       'Callback',@translate_callback);
checkbox_translate = uicontrol('Parent',d,...
       'Style','checkbox',...
       'units', 'normalized',...
       'fontsize', 12,...
       'Position',[0.9 0.425 0.2 0.2],...
       'String','Use',...
       'Value', fieldstoedit(4),...
       'Callback',@checkbox_translate_callback);
invert_options = [0, 1];
invert_value = 1;
if fieldstoedit(5) == 1 % inverse
    for lm = 1:length(invert_options)
        if invert_options(lm) == base_value.invert_filter
            invert_value = lm;
        end
    end
    invert_enable = 'on';
else
    invert_enable = 'off';
end
popup_invert = uicontrol('Parent',d,...
       'Style','popup',...
       'units', 'normalized',...
       'fontsize', 12,...
       'Position',[0.35 0.2 0.55 0.18],...
       'String',{'Off', 'On'},...
       'Value',invert_value,...
       'Enable', invert_enable,...
       'Callback',@invert_callback);
checkbox_invert = uicontrol('Parent',d,...
       'Style','checkbox',...
       'units', 'normalized',...
       'fontsize', 12,...
       'Position',[0.9 0.225 0.2 0.2],...
       'String','Use',...
       'Value', fieldstoedit(5),...
       'Callback',@checkbox_invert_callback);
OK_btn = uicontrol('Parent',d,...
       'Position',[89 20 70 25],...
       'String','Ok',...
       'Callback','delete(gcf)');
% Wait for d to close before running to completion
uiwait(d);
    % Callbacks:
    function type_callback(popup_type,event)
        idx = popup_type.Value;
        popup_items = popup_type.String;
        base_value.type = char(popup_items(idx,:));
    end
    function value_callback(edit_value,event)
        base_value.value = edit_value.String;
        base_value.value = str2double(strsplit(char(base_value.value)));
        if value_onerowcheck(2) == 1 %vertical before, so make it vertical again.
           base_value.value = base_value.value';
        end
    end
    function translate_callback(popup_translate,event)
        idx = popup_translate.Value;
        popup_items = popup_translate.String;
        base_value.translate_condition = char(popup_items(idx,:));
    end
    function invert_callback(popup_invert,event)
        idx = popup_invert.Value;
        popup_items = popup_invert.String;
        inv_filt = char(popup_items(idx,:));
        switch inv_filt
            case 'On'
                base_value.invert_filter = 1;
            case 'Off'
                base_value.invert_filter = 0;
        end
    end
    function checkbox_translate_callback(popup_checkbox_translate,event)
        if popup_checkbox_translate.Value == 0 % off - remove field.
            popup_translate.Value = 1;
            popup_translate.Enable = 'off';
            fieldstoedit(4) = 0;
            if isfield(base_value, 'translate_condition') % remove field
                base_value = rmfield(base_value, 'translate_condition');
            end
        elseif popup_checkbox_translate.Value == 1 % on - add field.
            popup_translate.Enable = 'on';
            fieldstoedit(4) = 1;
            base_value.translate_condition = char(popup_translate.String(popup_translate.Value));
        end
    end
    function checkbox_invert_callback(popup_checkbox_invert,event)
        if popup_checkbox_invert.Value == 0 % off - remove field.
            popup_invert.Value = 1;
            popup_invert.Enable = 'off';
            fieldstoedit(5) = 0;
            if isfield(base_value, 'invert_filter') % remove field
                base_value = rmfield(base_value, 'invert_filter');
            end
        elseif popup_checkbox_invert.Value == 1 % on - add field.
            popup_invert.Enable = 'on';
            fieldstoedit(5) = 1;
            invertfilterval = char(popup_invert.String(popup_invert.Value));
            switch invertfilterval
                case 'Off'
                    base_value.invert_filter = 0;
                case 'On'
                    base_value.invert_filter = 1;
            end
        end
    end
end